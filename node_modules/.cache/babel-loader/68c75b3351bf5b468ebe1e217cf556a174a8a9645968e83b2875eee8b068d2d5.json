{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst usePagination = ({\n  contentPerPage,\n  count\n}) => {\n  _s();\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contentPerPage);\n  const lastContentIndex = page * contentPerPage;\n  const firstContentIndex = lastContentIndex - contentPerPage;\n  const changePage = direction => {\n    setPage(state => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n  return {\n    totalPages: pageCount,\n    nextPage: () => changePage(true),\n    prevPage: () => changePage(false),\n    firstContentIndex,\n    lastContentIndex,\n    page\n  };\n};\n_s(usePagination, \"/DWZXlUKUNETkaaw7t58aXy53hg=\");\nexport default usePagination;","map":{"version":3,"names":["useState","usePagination","contentPerPage","count","_s","page","setPage","pageCount","Math","ceil","lastContentIndex","firstContentIndex","changePage","direction","state","totalPages","nextPage","prevPage"],"sources":["D:/Kimi_Toshiko/Programming/EPAM-Internship-test-task/src/TSComponents/usePagination.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\ninterface IUsePaginationProps {\r\n    contentPerPage: number;\r\n    count: number;\r\n}\r\n\r\ninterface IUsePaginationReturn {\r\n    page: number;\r\n    totalPages: number;\r\n    firstContentIndex: number;\r\n    lastContentIndex: number;\r\n    nextPage: () => void;\r\n    prevPage: () => void;\r\n}\r\n\r\ntype UsePagination = ({contentPerPage, count}: IUsePaginationProps) => (IUsePaginationReturn);\r\n\r\nconst usePagination: UsePagination = ({contentPerPage, count}) => {\r\n    const [page, setPage] = useState<number>(1);\r\n    const pageCount: number = Math.ceil(count / contentPerPage);\r\n    const lastContentIndex: number = page * contentPerPage;\r\n    const firstContentIndex: number = lastContentIndex - contentPerPage;\r\n\r\n    const changePage = (direction: boolean) => {\r\n        setPage((state) => {\r\n            if (direction) {\r\n                if (state === pageCount) {\r\n                    return state;\r\n                }\r\n                return state + 1;\r\n            }\r\n            else {\r\n                if (state === 1) {\r\n                    return state;\r\n                }\r\n                return state - 1;\r\n            }\r\n        });\r\n    };\r\n\r\n    return {\r\n        totalPages: pageCount,\r\n        nextPage: () => changePage(true),\r\n        prevPage: () => changePage(false),\r\n        firstContentIndex,\r\n        lastContentIndex,\r\n        page\r\n    }\r\n};\r\n\r\nexport default usePagination;"],"mappings":";AACA,SAASA,QAAQ,QAAQ,OAAO;AAkBhC,MAAMC,aAA4B,GAAGA,CAAC;EAACC,cAAc;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAMO,SAAiB,GAAGC,IAAI,CAACC,IAAI,CAACN,KAAK,GAAGD,cAAc,CAAC;EAC3D,MAAMQ,gBAAwB,GAAGL,IAAI,GAAGH,cAAc;EACtD,MAAMS,iBAAyB,GAAGD,gBAAgB,GAAGR,cAAc;EAEnE,MAAMU,UAAU,GAAIC,SAAkB,IAAK;IACvCP,OAAO,CAAEQ,KAAK,IAAK;MACf,IAAID,SAAS,EAAE;QACX,IAAIC,KAAK,KAAKP,SAAS,EAAE;UACrB,OAAOO,KAAK;QAChB;QACA,OAAOA,KAAK,GAAG,CAAC;MACpB,CAAC,MACI;QACD,IAAIA,KAAK,KAAK,CAAC,EAAE;UACb,OAAOA,KAAK;QAChB;QACA,OAAOA,KAAK,GAAG,CAAC;MACpB;IACJ,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IACHC,UAAU,EAAER,SAAS;IACrBS,QAAQ,EAAEA,CAAA,KAAMJ,UAAU,CAAC,IAAI,CAAC;IAChCK,QAAQ,EAAEA,CAAA,KAAML,UAAU,CAAC,KAAK,CAAC;IACjCD,iBAAiB;IACjBD,gBAAgB;IAChBL;EACJ,CAAC;AACL,CAAC;AAACD,EAAA,CA/BIH,aAA4B;AAiClC,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}