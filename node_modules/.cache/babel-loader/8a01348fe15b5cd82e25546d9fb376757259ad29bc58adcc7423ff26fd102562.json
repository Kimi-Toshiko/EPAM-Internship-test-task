{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = (url, isDataChanged) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(url).then(res => {\n      if (!res.ok) {\n        throw Error('Error fetching cars data');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setIsPending(false);\n      setError(err.message);\n    });\n  }, [url, isDataChanged]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","isDataChanged","_s","data","setData","isPending","setIsPending","error","setError","fetch","then","res","ok","Error","json","catch","err","message"],"sources":["D:/Kimi_Toshiko/Programming/EPAM-Internship-test-task/async-race-react-app/src/TSComponents/useFetch.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ninterface IUseFetchResult {\r\n    data: any | null;\r\n    isPending: boolean;\r\n    error: any | null;\r\n}\r\n\r\nconst useFetch = (url: string, isDataChanged?: number): IUseFetchResult => {\r\n    const [data, setData] = useState<any | null>(null);\r\n    const [isPending, setIsPending] = useState<boolean>(true);\r\n    const [error, setError] = useState<any | null>(null);\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error('Error fetching cars data');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setData(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                setIsPending(false);\r\n                setError(err.message);\r\n            })\r\n    }, [url, isDataChanged]);\r\n\r\n    return {data, isPending, error};\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAQ3C,MAAMC,QAAQ,GAAGA,CAACC,GAAW,EAAEC,aAAsB,KAAsB;EAAAC,EAAA;EACvE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAa,IAAI,CAAC;EAClD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAU,IAAI,CAAC;EACzD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAa,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZY,KAAK,CAACT,GAAG,CAAC,CACLU,IAAI,CAACC,GAAG,IAAI;MACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACT,MAAMC,KAAK,CAAC,0BAA0B,CAAC;MAC3C;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAACP,IAAI,IAAI;MACVC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,IAAI;MACVV,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,CAAC;EACV,CAAC,EAAE,CAACjB,GAAG,EAAEC,aAAa,CAAC,CAAC;EAExB,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACnC,CAAC;AAAAL,EAAA,CAzBKH,QAAQ;AA2Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}